"""Revise transaction table

Revision ID: 3d2609c81c10
Revises: e867986fa7cd
Create Date: 2025-08-22 22:43:37.190260

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "3d2609c81c10"
down_revision: Union[str, Sequence[str], None] = "e867986fa7cd"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
	"""Upgrade schema."""
	# ### commands auto generated by Alembic - please adjust! ###
	op.drop_table("transactions")
	op.drop_table("categories")
	op.drop_table("users")
	# ### end Alembic commands ###


def downgrade() -> None:
	"""Downgrade schema."""
	# ### commands auto generated by Alembic - please adjust! ###
	op.create_table(
		"users",
		sa.Column(
			"id",
			sa.INTEGER(),
			server_default=sa.text("nextval('users_id_seq'::regclass)"),
			autoincrement=True,
			nullable=False,
		),
		sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
		sa.Column(
			"hashed_password",
			sa.VARCHAR(),
			autoincrement=False,
			nullable=False,
		),
		sa.Column(
			"fullname",
			sa.VARCHAR(length=100),
			autoincrement=False,
			nullable=True,
		),
		sa.Column("birthday", sa.DATE(), autoincrement=False, nullable=True),
		sa.PrimaryKeyConstraint("id", name="users_pkey"),
		sa.UniqueConstraint(
			"email",
			name="users_email_key",
			postgresql_include=[],
			postgresql_nulls_not_distinct=False,
		),
		postgresql_ignore_search_path=False,
	)
	op.create_table(
		"categories",
		sa.Column("category_id", sa.UUID(), autoincrement=False, nullable=False),
		sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=False),
		sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
		sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
		sa.Column(
			"category_type",
			postgresql.ENUM(
				"debit", "credit", name="categorytypeenum", create_type=False
			),
			autoincrement=False,
			nullable=False,
		),
		sa.ForeignKeyConstraint(
			["user_id"], ["users.id"], name="categories_user_id_fkey"
		),
		sa.PrimaryKeyConstraint("category_id", name="categories_pkey"),
		postgresql_ignore_search_path=False,
	)
	op.create_table(
		"transactions",
		sa.Column("transaction_id", sa.UUID(), autoincrement=False, nullable=False),
		sa.Column(
			"transaction_type",
			postgresql.ENUM(
				"debit", "credit", name="transactiontypeenum", create_type=False
			),
			autoincrement=False,
			nullable=False,
		),
		sa.Column("amount", sa.NUMERIC(), autoincrement=False, nullable=False),
		sa.Column(
			"transaction_day_time",
			postgresql.TIMESTAMP(),
			autoincrement=False,
			nullable=False,
		),
		sa.Column(
			"created_at",
			postgresql.TIMESTAMP(),
			server_default=sa.text("now()"),
			autoincrement=False,
			nullable=False,
		),
		sa.Column("category_id", sa.UUID(), autoincrement=False, nullable=False),
		sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
		sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
		sa.Column(
			"other_data",
			postgresql.JSON(astext_type=sa.Text()),
			autoincrement=False,
			nullable=True,
		),
		sa.ForeignKeyConstraint(
			["category_id"],
			["categories.category_id"],
			name=op.f("transactions_category_id_fkey"),
		),
		sa.ForeignKeyConstraint(
			["user_id"], ["users.id"], name=op.f("transactions_user_id_fkey")
		),
		sa.PrimaryKeyConstraint("transaction_id", name=op.f("transactions_pkey")),
	)
	# ### end Alembic commands ###
