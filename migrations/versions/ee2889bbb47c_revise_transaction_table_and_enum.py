"""Revise transaction table and ENUM

Revision ID: ee2889bbb47c
Revises: 3d2609c81c10
Create Date: 2025-08-23 11:37:50.650108

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ee2889bbb47c"
down_revision: Union[str, Sequence[str], None] = "3d2609c81c10"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
	"""Upgrade schema."""
	# ### commands auto generated by Alembic - please adjust! ###
	bind = op.get_bind()

	category_type_enum = sa.Enum("debit", "credit", name="categorytypeenum")
	category_type_enum.create(bind, checkfirst=True)

	transaction_type_enum = sa.Enum("debit", "credit", name="transactiontypeenum")
	transaction_type_enum.create(bind, checkfirst=True)

	op.create_table(
		"users",
		sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
		sa.Column("email", sa.String(), nullable=False),
		sa.Column("hashed_password", sa.String(), nullable=False),
		sa.Column("fullname", sa.String(length=100), nullable=True),
		sa.Column("birthday", sa.Date(), nullable=True),
		sa.PrimaryKeyConstraint("id"),
		sa.UniqueConstraint("email"),
	)
	op.create_table(
		"categories",
		sa.Column("category_id", sa.Uuid(), nullable=False),
		sa.Column("title", sa.String(), nullable=False),
		sa.Column("description", sa.String(), nullable=True),
		sa.Column("user_id", sa.Integer(), nullable=False),
		sa.Column(
			"category_type",
			postgresql.ENUM(
				"debit",
				"credit",
				name="categorytypeenum",
				inherit_schema=True,
				create_type=False,
				checkfirst=True,
			),
			nullable=False,
		),
		sa.ForeignKeyConstraint(
			["user_id"],
			["users.id"],
		),
		sa.PrimaryKeyConstraint("category_id"),
	)
	op.create_table(
		"transactions",
		sa.Column("transaction_id", sa.Uuid(), nullable=False),
		sa.Column(
			"transaction_type",
			postgresql.ENUM(
				"debit",
				"credit",
				name="transactiontypeenum",
				inherit_schema=True,
				create_type=False,
				checkfirst=True,
			),
			nullable=False,
		),
		sa.Column("amount", sa.NUMERIC(precision=14, scale=2), nullable=False),
		sa.Column(
			"transaction_day_time",
			postgresql.TIMESTAMP(timezone=True),
			nullable=False,
		),
		sa.Column(
			"created_at",
			postgresql.TIMESTAMP(timezone=True),
			server_default=sa.text("now()"),
			nullable=False,
		),
		sa.Column("category_id", sa.Uuid(), nullable=True),
		sa.Column("description", sa.String(), nullable=True),
		sa.Column("user_id", sa.Integer(), nullable=True),
		sa.Column("other_data", sa.JSON(), nullable=True),
		sa.ForeignKeyConstraint(
			["category_id"],
			["categories.category_id"],
			onupdate="CASCADE",
			ondelete="SET NULL",
		),
		sa.ForeignKeyConstraint(
			["user_id"], ["users.id"], onupdate="CASCADE", ondelete="SET NULL"
		),
		sa.PrimaryKeyConstraint("transaction_id"),
	)
	# ### end Alembic commands ###


def downgrade() -> None:
	"""Downgrade schema."""
	# ### commands auto generated by Alembic - please adjust! ###
	op.drop_table("transactions")
	op.drop_table("categories")
	op.drop_table("users")
	# ### end Alembic commands ###
